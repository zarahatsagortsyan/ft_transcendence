{"ast":null,"code":"var _jsxFileName = \"/goinfre/ihovhann/our_project/src/pages/SetNick.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// function SetNick() {\n//     const [nickname, setNickname] = useState('');\n\n//   const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n//     setNickname(event.target.value);\n//   };\n\n//   const handleFormSubmit = (event: React.FormEvent) => {\n//     event.preventDefault();\n//     // Perform any necessary actions with the nickname, such as sending it to a server or updating the state in a parent component\n//     console.log('Nickname:', nickname);\n//     // Reset the nickname input field\n//     setNickname('');\n//   };\n\n//   return (\n//     <div className=\"set-nickname-window\" style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)'}}>\n//       <h2>Set username</h2>\n//       <form onSubmit={handleFormSubmit}>\n//         {/* <div class=\"v-card_text\"></div> */}\n//         <input type=\"text\" value={nickname} onChange={handleInputChange} placeholder=\"Enter your nickname\" />\n//         <button type=\"submit\">Save</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default SetNick\n\nimport React, { useState } from 'react';\nimport './';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SetNick = () => {\n  _s();\n  const [nickname, setNickname] = useState('');\n  const handleInputChange = event => {\n    setNickname(event.target.value);\n  };\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    // Perform any necessary actions with the nickname, such as sending it to a server or updating the state in a parent component\n    console.log('Nickname:', nickname);\n    // Reset the nickname input field\n    setNickname('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"set-nickname-window\",\n    style: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Set Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nickname,\n        onChange: handleInputChange,\n        placeholder: \"Enter your nickname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(SetNick, \"DgnWd+pWua2xl47Uuw3zXG+oI1g=\");\n_c = SetNick;\nexport default SetNick;\nvar _c;\n$RefreshReg$(_c, \"SetNick\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SetNick","_s","nickname","setNickname","handleInputChange","event","target","value","handleFormSubmit","preventDefault","console","log","className","style","position","top","left","transform","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/goinfre/ihovhann/our_project/src/pages/SetNick.tsx"],"sourcesContent":["// import React, { useState } from 'react';\n\n// function SetNick() {\n//     const [nickname, setNickname] = useState('');\n\n//   const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n//     setNickname(event.target.value);\n//   };\n\n//   const handleFormSubmit = (event: React.FormEvent) => {\n//     event.preventDefault();\n//     // Perform any necessary actions with the nickname, such as sending it to a server or updating the state in a parent component\n//     console.log('Nickname:', nickname);\n//     // Reset the nickname input field\n//     setNickname('');\n//   };\n\n//   return (\n//     <div className=\"set-nickname-window\" style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)'}}>\n//       <h2>Set username</h2>\n//       <form onSubmit={handleFormSubmit}>\n//         {/* <div class=\"v-card_text\"></div> */}\n//         <input type=\"text\" value={nickname} onChange={handleInputChange} placeholder=\"Enter your nickname\" />\n//         <button type=\"submit\">Save</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default SetNick\n\nimport React, { useState } from 'react';\nimport './'\n\nconst SetNick: React.FC = () => {\n  const [nickname, setNickname] = useState<string>('');\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNickname(event.target.value);\n  };\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    // Perform any necessary actions with the nickname, such as sending it to a server or updating the state in a parent component\n    console.log('Nickname:', nickname);\n    // Reset the nickname input field\n    setNickname('');\n  };\n\n  return (\n    <div className=\"set-nickname-window\" style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\n      <h2>Set Username</h2>\n      <form onSubmit={handleFormSubmit}>\n        <input type=\"text\" value={nickname} onChange={handleInputChange} placeholder=\"Enter your nickname\" />\n        <button type=\"submit\">Save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default SetNick;\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,IAAI;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEX,MAAMC,OAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAS,EAAE,CAAC;EAEpD,MAAMO,iBAAiB,GAAIC,KAA0C,IAAK;IACxEF,WAAW,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMC,gBAAgB,GAAIH,KAAsB,IAAK;IACnDA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtB;IACAC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAET,QAAQ,CAAC;IAClC;IACAC,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,oBACEJ,OAAA;IAAKa,SAAS,EAAC,qBAAqB;IAACC,KAAK,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEC,GAAG,EAAE,KAAK;MAAEC,IAAI,EAAE,KAAK;MAAEC,SAAS,EAAE;IAAwB,CAAE;IAAAC,QAAA,gBAChInB,OAAA;MAAAmB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBvB,OAAA;MAAMwB,QAAQ,EAAEf,gBAAiB;MAAAU,QAAA,gBAC/BnB,OAAA;QAAOyB,IAAI,EAAC,MAAM;QAACjB,KAAK,EAAEL,QAAS;QAACuB,QAAQ,EAAErB,iBAAkB;QAACsB,WAAW,EAAC;MAAqB;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrGvB,OAAA;QAAQyB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACrB,EAAA,CAxBID,OAAiB;AAAA2B,EAAA,GAAjB3B,OAAiB;AA0BvB,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}