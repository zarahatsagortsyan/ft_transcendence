{"ast":null,"code":"\n// // function Chat() {\n// //     return (\n// //         <h1>Barev</h1>\n// //     );\n// // }\n\n// // export default Chat\n\n// import React, { useState } from 'react';\n// import './Chat.css';\n\n// interface Message {\n//   id: number;\n//   text: string;\n// }\n\n// const Chat: React.FC = () => {\n//   const [messages, setMessages] = useState<Message[]>([]);\n//   const [newMessage, setNewMessage] = useState('');\n\n//   const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n//     setNewMessage(event.target.value);\n//   };\n\n//   const handleFormSubmit = (event: React.FormEvent) => {\n//     event.preventDefault();\n//     if (newMessage.trim() === '') {\n//       return;\n//     }\n//     const message: Message = {\n//       id: Date.now(),\n//       text: newMessage.trim(),\n//     };\n//     setMessages((prevMessages) => [...prevMessages, message]);\n//     setNewMessage('');\n//   };\n\n//   return (\n//     <div className=\"chat-container\">\n//       <div className=\"chat-messages\">\n//         {messages.map((message) => (\n//           <div key={message.id} className=\"chat-message\">\n//             {message.text}\n//           </div>\n//         ))}\n//       </div>\n//       <form onSubmit={handleFormSubmit} className=\"chat-form\">\n//         <input\n//           type=\"text\"\n//           value={newMessage}\n//           onChange={handleInputChange}\n//           placeholder=\"Enter your message\"\n//           className=\"chat-input\"\n//         />\n//         <button type=\"submit\" className=\"chat-button\">\n//           Send\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Chat;\n\n// import React, { useState, useRef, useEffect } from 'react';\n// import './Chat.css';\n\n// interface ChatProps {\n//   messages: string[];\n// }\n\n// const Chat: React.FC<ChatProps> = ({ messages = [] }) => {\n//   const [inputValue, setInputValue] = useState('');\n//   const chatContainerRef = useRef<HTMLDivElement>(null);\n\n//   useEffect(() => {\n//     scrollToBottom();\n//   }, [messages]);\n\n//   const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n//     setInputValue(event.target.value);\n//   };\n\n//   const handleFormSubmit = (event: React.FormEvent) => {\n//     event.preventDefault();\n//     if (inputValue.trim() !== '') {\n//       addMessage(inputValue);\n//       setInputValue('');\n//     }\n//   };\n\n//   const addMessage = (message: string) => {\n//     // Perform any necessary actions with the message, such as sending it to a server or updating the state in a parent component\n//     console.log('New message:', message);\n//   };\n\n//   const scrollToBottom = () => {\n//     if (chatContainerRef.current) {\n//       chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n//     }\n//   };\n\n//   return (\n//     <div className=\"chat-container\" ref={chatContainerRef}>\n//       <div className=\"chat-messages\">\n//         {messages.map((message, index) => (\n//           <div key={index} className=\"chat-message\">\n//             {message}\n//           </div>\n//         ))}\n//       </div>\n//       <form onSubmit={handleFormSubmit} className=\"chat-form\">\n//         <input\n//           type=\"text\"\n//           value={inputValue}\n//           onChange={handleInputChange}\n//           placeholder=\"Enter your message\"\n//           className=\"chat-input\"\n//         />\n//         <button type=\"submit\" className=\"chat-button\">\n//           Send\n//         </button>\n//       </form>\n//     </div>\n//   );\n\n// };\n\n// export default Chat;\n\n// import React from 'react';\n// import './Chat.css';\n\n// interface ChatWindowProps {\n//   messages: string[];\n// }\n\n// const ChatWindow: React.FC<ChatWindowProps> = ({ messages }) => {\n//   return (\n//     <div className=\"chat-window\">\n//       {messages.map((message, index) => (\n//         <div key={index} className=\"chat-message\">\n//           {message}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default ChatWindow;","map":{"version":3,"names":[],"sources":["/goinfre/ihovhann/our_project/src/pages/Chat.tsx"],"sourcesContent":["\n// // function Chat() {\n// //     return (\n// //         <h1>Barev</h1>\n// //     );\n// // }\n\n// // export default Chat\n\n// import React, { useState } from 'react';\n// import './Chat.css';\n\n// interface Message {\n//   id: number;\n//   text: string;\n// }\n\n// const Chat: React.FC = () => {\n//   const [messages, setMessages] = useState<Message[]>([]);\n//   const [newMessage, setNewMessage] = useState('');\n\n//   const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n//     setNewMessage(event.target.value);\n//   };\n\n//   const handleFormSubmit = (event: React.FormEvent) => {\n//     event.preventDefault();\n//     if (newMessage.trim() === '') {\n//       return;\n//     }\n//     const message: Message = {\n//       id: Date.now(),\n//       text: newMessage.trim(),\n//     };\n//     setMessages((prevMessages) => [...prevMessages, message]);\n//     setNewMessage('');\n//   };\n\n//   return (\n//     <div className=\"chat-container\">\n//       <div className=\"chat-messages\">\n//         {messages.map((message) => (\n//           <div key={message.id} className=\"chat-message\">\n//             {message.text}\n//           </div>\n//         ))}\n//       </div>\n//       <form onSubmit={handleFormSubmit} className=\"chat-form\">\n//         <input\n//           type=\"text\"\n//           value={newMessage}\n//           onChange={handleInputChange}\n//           placeholder=\"Enter your message\"\n//           className=\"chat-input\"\n//         />\n//         <button type=\"submit\" className=\"chat-button\">\n//           Send\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Chat;\n\n// import React, { useState, useRef, useEffect } from 'react';\n// import './Chat.css';\n\n// interface ChatProps {\n//   messages: string[];\n// }\n\n// const Chat: React.FC<ChatProps> = ({ messages = [] }) => {\n//   const [inputValue, setInputValue] = useState('');\n//   const chatContainerRef = useRef<HTMLDivElement>(null);\n\n//   useEffect(() => {\n//     scrollToBottom();\n//   }, [messages]);\n\n//   const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n//     setInputValue(event.target.value);\n//   };\n\n//   const handleFormSubmit = (event: React.FormEvent) => {\n//     event.preventDefault();\n//     if (inputValue.trim() !== '') {\n//       addMessage(inputValue);\n//       setInputValue('');\n//     }\n//   };\n\n//   const addMessage = (message: string) => {\n//     // Perform any necessary actions with the message, such as sending it to a server or updating the state in a parent component\n//     console.log('New message:', message);\n//   };\n\n//   const scrollToBottom = () => {\n//     if (chatContainerRef.current) {\n//       chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n//     }\n//   };\n\n//   return (\n//     <div className=\"chat-container\" ref={chatContainerRef}>\n//       <div className=\"chat-messages\">\n//         {messages.map((message, index) => (\n//           <div key={index} className=\"chat-message\">\n//             {message}\n//           </div>\n//         ))}\n//       </div>\n//       <form onSubmit={handleFormSubmit} className=\"chat-form\">\n//         <input\n//           type=\"text\"\n//           value={inputValue}\n//           onChange={handleInputChange}\n//           placeholder=\"Enter your message\"\n//           className=\"chat-input\"\n//         />\n//         <button type=\"submit\" className=\"chat-button\">\n//           Send\n//         </button>\n//       </form>\n//     </div>\n//   );\n\n// };\n\n// export default Chat;\n\n// import React from 'react';\n// import './Chat.css';\n\n// interface ChatWindowProps {\n//   messages: string[];\n// }\n\n// const ChatWindow: React.FC<ChatWindowProps> = ({ messages }) => {\n//   return (\n//     <div className=\"chat-window\">\n//       {messages.map((message, index) => (\n//         <div key={index} className=\"chat-message\">\n//           {message}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default ChatWindow;\n\n\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}