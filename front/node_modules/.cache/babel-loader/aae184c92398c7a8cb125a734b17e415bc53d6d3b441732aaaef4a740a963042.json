{"ast":null,"code":"var _jsxFileName = \"/goinfre/ihovhann/our_project/src/pages/Chat.tsx\",\n  _s = $RefreshSig$();\n// // function Chat() {\n// //     return (\n// //         <h1>Barev</h1>\n// //     );\n// // }\n\n// // export default Chat\n\n// import React, { useState } from 'react';\n// import './Chat.css';\n\n// interface Message {\n//   id: number;\n//   text: string;\n// }\n\n// const Chat: React.FC = () => {\n//   const [messages, setMessages] = useState<Message[]>([]);\n//   const [newMessage, setNewMessage] = useState('');\n\n//   const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n//     setNewMessage(event.target.value);\n//   };\n\n//   const handleFormSubmit = (event: React.FormEvent) => {\n//     event.preventDefault();\n//     if (newMessage.trim() === '') {\n//       return;\n//     }\n//     const message: Message = {\n//       id: Date.now(),\n//       text: newMessage.trim(),\n//     };\n//     setMessages((prevMessages) => [...prevMessages, message]);\n//     setNewMessage('');\n//   };\n\n//   return (\n//     <div className=\"chat-container\">\n//       <div className=\"chat-messages\">\n//         {messages.map((message) => (\n//           <div key={message.id} className=\"chat-message\">\n//             {message.text}\n//           </div>\n//         ))}\n//       </div>\n//       <form onSubmit={handleFormSubmit} className=\"chat-form\">\n//         <input\n//           type=\"text\"\n//           value={newMessage}\n//           onChange={handleInputChange}\n//           placeholder=\"Enter your message\"\n//           className=\"chat-input\"\n//         />\n//         <button type=\"submit\" className=\"chat-button\">\n//           Send\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Chat;\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = _ref => {\n  _s();\n  let {\n    messages = []\n  } = _ref;\n  const [inputValue, setInputValue] = useState('');\n  const chatContainerRef = useRef(null);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    if (inputValue.trim() !== '') {\n      addMessage(inputValue);\n      setInputValue('');\n    }\n  };\n  const addMessage = message => {\n    // Perform any necessary actions with the message, such as sending it to a server or updating the state in a parent component\n    console.log('New message:', message);\n  };\n  const scrollToBottom = () => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  };\n\n  //   return (\n  //     <div className=\"chat-container\" ref={chatContainerRef}>\n  //       <div className=\"chat-messages\">\n  //         {messages.map((message, index) => (\n  //           <div key={index} className=\"chat-message\">\n  //             {message}\n  //           </div>\n  //         ))}\n  //       </div>\n  //       <form onSubmit={handleFormSubmit} className=\"chat-form\">\n  //         <input\n  //           type=\"text\"\n  //           value={inputValue}\n  //           onChange={handleInputChange}\n  //           placeholder=\"Enter your message\"\n  //           className=\"chat-input\"\n  //         />\n  //         <button type=\"submit\" className=\"chat-button\">\n  //           Send\n  //         </button>\n  //       </form>\n  //     </div>\n  //   );\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    ref: chatContainerRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message\",\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      className: \"chat-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInputChange,\n        placeholder: \"Enter your message\",\n        className: \"chat-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"chat-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"grnEdxXuVqx2eNrWmPwGBJ2yFEM=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Chat","_ref","_s","messages","inputValue","setInputValue","chatContainerRef","scrollToBottom","handleInputChange","event","target","value","handleFormSubmit","preventDefault","trim","addMessage","message","console","log","current","scrollTop","scrollHeight","className","ref","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/goinfre/ihovhann/our_project/src/pages/Chat.tsx"],"sourcesContent":["\n// // function Chat() {\n// //     return (\n// //         <h1>Barev</h1>\n// //     );\n// // }\n\n// // export default Chat\n\n// import React, { useState } from 'react';\n// import './Chat.css';\n\n// interface Message {\n//   id: number;\n//   text: string;\n// }\n\n// const Chat: React.FC = () => {\n//   const [messages, setMessages] = useState<Message[]>([]);\n//   const [newMessage, setNewMessage] = useState('');\n\n//   const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n//     setNewMessage(event.target.value);\n//   };\n\n//   const handleFormSubmit = (event: React.FormEvent) => {\n//     event.preventDefault();\n//     if (newMessage.trim() === '') {\n//       return;\n//     }\n//     const message: Message = {\n//       id: Date.now(),\n//       text: newMessage.trim(),\n//     };\n//     setMessages((prevMessages) => [...prevMessages, message]);\n//     setNewMessage('');\n//   };\n\n//   return (\n//     <div className=\"chat-container\">\n//       <div className=\"chat-messages\">\n//         {messages.map((message) => (\n//           <div key={message.id} className=\"chat-message\">\n//             {message.text}\n//           </div>\n//         ))}\n//       </div>\n//       <form onSubmit={handleFormSubmit} className=\"chat-form\">\n//         <input\n//           type=\"text\"\n//           value={newMessage}\n//           onChange={handleInputChange}\n//           placeholder=\"Enter your message\"\n//           className=\"chat-input\"\n//         />\n//         <button type=\"submit\" className=\"chat-button\">\n//           Send\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Chat;\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport './Chat.css';\n\ninterface ChatProps {\n  messages: string[];\n}\n\nconst Chat: React.FC<ChatProps> = ({ messages = [] }) => {\n  const [inputValue, setInputValue] = useState('');\n  const chatContainerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (inputValue.trim() !== '') {\n      addMessage(inputValue);\n      setInputValue('');\n    }\n  };\n\n  const addMessage = (message: string) => {\n    // Perform any necessary actions with the message, such as sending it to a server or updating the state in a parent component\n    console.log('New message:', message);\n  };\n\n  const scrollToBottom = () => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  };\n\n//   return (\n//     <div className=\"chat-container\" ref={chatContainerRef}>\n//       <div className=\"chat-messages\">\n//         {messages.map((message, index) => (\n//           <div key={index} className=\"chat-message\">\n//             {message}\n//           </div>\n//         ))}\n//       </div>\n//       <form onSubmit={handleFormSubmit} className=\"chat-form\">\n//         <input\n//           type=\"text\"\n//           value={inputValue}\n//           onChange={handleInputChange}\n//           placeholder=\"Enter your message\"\n//           className=\"chat-input\"\n//         />\n//         <button type=\"submit\" className=\"chat-button\">\n//           Send\n//         </button>\n//       </form>\n//     </div>\n//   );\nreturn (\n    <div className=\"chat-container\" ref={chatContainerRef}>\n      <div className=\"chat-messages\">\n        {messages.map((message, index) => (\n          <div key={index} className=\"chat-message\">\n            {message}\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleFormSubmit} className=\"chat-form\">\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={handleInputChange}\n          placeholder=\"Enter your message\"\n          className=\"chat-input\"\n        />\n        <button type=\"submit\" className=\"chat-button\">\n          Send\n        </button>\n      </form>\n    </div>\n  );\n  \n  \n};\n\nexport default Chat;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}